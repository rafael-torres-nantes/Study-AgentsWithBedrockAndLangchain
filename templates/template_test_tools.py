import os
import json
import pandas as pd

class PromptTemplate:
    """
    Classe para gerar template de prompt para o iShopMeta AI Assistant.
    Sistema de assistente inteligente para descoberta personalizada de produtos, 
    filtragem de marcas e suporte ao usu√°rio atrav√©s de intera√ß√£o por texto.
    """

    def __init__(self, user_query, context_data=None):
        """
        Inicializa a classe com a query do usu√°rio e dados de contexto.
        
        Args:
            user_query (str): Query/pergunta do usu√°rio sobre produtos ou marcas.
            user_id (str): ID √∫nico do usu√°rio para personaliza√ß√£o.
            context_data (dict, optional): Dados adicionais de contexto do usu√°rio.
        """
        self.user_query = user_query
        self.context_data = context_data if context_data is not None else {}
        
        # Cria o template do prompt
        self.create_prompt_template()

    def create_prompt_template(self):
        """
        Gera o prompt para o iShopMeta AI Assistant baseado nos requisitos do projeto.
        
        Returns:
            str: O prompt formatado para o assistente de compras.
        """
        self.prompt = f"""
        <context>
            Voc√™ √© um assistente de chat inteligente e √∫til, capaz de ajudar os usu√°rios com diversas tarefas 
            cotidianas. Voc√™ tem m√∫ltiplas funcionalidades para auxiliar em diferentes necessidades, desde 
            contagem de caracteres at√© an√°lises de texto e outras utilidades.
            
            Seu papel √© fornecer ajuda r√°pida, precisa e amig√°vel para qualquer solicita√ß√£o do usu√°rio.
        </context>

        <suas_funcionalidades>
            - Contar caracteres, palavras e linhas em textos
            - An√°lise de texto (mai√∫sculas, min√∫sculas, n√∫meros, s√≠mbolos)
            - Convers√£o de texto (mai√∫scula/min√∫scula, capitaliza√ß√£o)
            - C√°lculos matem√°ticos b√°sicos e avan√ßados
            - Formata√ß√£o de texto e dados
            - Tradu√ß√£o entre idiomas
            - Gera√ß√£o de resumos e explica√ß√µes
            - Responder perguntas gerais
            - Ajuda com programa√ß√£o e c√≥digo
            - Organiza√ß√£o de informa√ß√µes
        </suas_funcionalidades>

        <diretrizes_de_interacao>
            1. Seja sempre prestativo e educado
            2. Forne√ßa respostas claras e precisas
            3. Quando contar caracteres, seja espec√≠fico (com/sem espa√ßos)
            4. Ofere√ßa informa√ß√µes adicionais quando relevante
            5. Use formata√ß√£o clara para facilitar a leitura
            6. Pergunte esclarecimentos se a solicita√ß√£o for amb√≠gua
            7. Mantenha um tom amig√°vel e profissional
            8. Forne√ßa exemplos quando apropriado
        </diretrizes_de_interacao>

        <formato_resposta>
            Forne√ßa respostas em formato JSON com a seguinte estrutura:
            {{{{
            "tipo_resposta": "contagem|calculo|formatacao|informacao|ajuda",
            "resultado": "O resultado principal da solicita√ß√£o",
            "detalhes": "Informa√ß√µes adicionais ou breakdown detalhado",
            "sugestoes": ["sugest√£o1", "sugest√£o2"] (se aplic√°vel),
            "exemplo": "Exemplo pr√°tico se necess√°rio"
            }}}}
        </formato_resposta>

        <sessao_atual>
            Consulta do Usu√°rio: "{self.user_query}"
            Contexto Anterior: {json.dumps(self.context_data, indent=2) if self.context_data else "Nova conversa iniciada"}
        </sessao_atual>

        <instrucoes>
            Analise a solicita√ß√£o do usu√°rio e forne√ßa a ajuda apropriada:
            
            1. Se for uma solicita√ß√£o de contagem de caracteres:
               - Conte os caracteres exatos (incluindo e excluindo espa√ßos)
               - Forne√ßa tamb√©m contagem de palavras se relevante
               - Mencione caracteres especiais se houver
            
            2. Para outras tarefas:
               - Identifique o tipo de ajuda necess√°ria
               - Execute a tarefa solicitada
               - Forne√ßa informa√ß√µes complementares √∫teis
            
            3. Se a solicita√ß√£o n√£o for clara:
               - Pe√ßa esclarecimentos de forma educada
               - Sugira poss√≠veis interpreta√ß√µes
            
            Seja eficiente, preciso e sempre disposto a ajudar! ü§ñ
        </instrucoes>
        """

        return self.prompt
    
    def get_prompt_text(self):
        """
        Retorna o texto do prompt formatado para o iShopMeta AI Assistant.
        
        Returns:
            str: O prompt completo formatado.
        """
        return self.prompt

    def add_context_data(self, key, value):
        """
        Adiciona dados de contexto adicionais para personaliza√ß√£o.
        
        Args:
            key (str): Chave do dado de contexto.
            value: Valor do dado de contexto.
        """
        self.context_data[key] = value
        # Recriar o prompt com os novos dados de contexto
        self.create_prompt_template()

    def update_user_query(self, new_query):
        """
        Atualiza a query do usu√°rio e recria o prompt.
        
        Args:
            new_query (str): Nova query do usu√°rio.
        """
        self.user_query = new_query
        self.create_prompt_template()